name: Android CI

on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    # delete local tag (git tag -d v2.0)
    # delete remote tag (git push origin :refs/tags/v2.0)
    # add tag (git tag -a v2.0 -m "release 2.0 version")
    # push tag (git push origin --tag)
      - 'v*' # Push events to matching v*, i.e. v1.0, v2.0.5
    paths:
      - '.github/workflows/android.yml'

# all jobs for workflow
jobs:
  # jobs for tests
  test:
    name: Run Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Unit Test
        run: bash ./gradlew test --stacktrace
  
  # jobs for building apk 
  build:
    name: Building Apk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Debug Apk
        run: bash ./gradlew assembleDebug --stacktrace
      
      - name: Upload Archiver File
        uses: actions/upload-artifact@v2
        with:
          # set the archiver name 
          name: termux-sdl-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          
  # jobs for deploy apk
  deploy:
    name: Deploy Apk
    runs-on: ubuntu-latest
    # dependent build job
    needs: [build] 
    
    # git tag -a v1.0 -m "release 1.0 version"
    # git push origin â€“-tags
    if: contains(github.ref, 'tags/')
    steps:
      - name: Prepare Release
        # set id for get output tag_name
        # steps.prepare_release.outputs.tag_name
        id: prepare_release
        run: |
          TAG_NAME=`echo $GITHUB_REF | cut -d / -f3`
          echo ::set-output name=tag_name::$TAG_NAME
      
      - name: Download Archiver File
        if: steps.prepare_release.outputs.tag_name
        uses: actions/download-artifact@v2
        with:
          # download archiver file 
          name: termux-sdl-debug
          
      # create release
      - name: Create Release
        id: create_release
        # check tag_name
        if: ${{ steps.prepare_release.outputs.tag_name }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_release.outputs.tag_name }}
          release_name: ${{ steps.prepare_release.outputs.tag_name }}
          draft: false
          prerelease: false
          
      # upload apk
      - name: Upload Apk
        id: upload-release-asset 
        # check upload_url
        if: ${{ steps.create_release.outputs.upload_url }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-debug.apk 
          asset_name: termux-sdl-debug-${{ steps.prepare_release.outputs.tag_name }}.apk 
          asset_content_type: application/vnd.android.package-archive
          
